//static boolean mirror(Node leftPart,Node rightPart){
//        if (leftPart==null||rightPart==null)return leftPart==rightPart;
//        if (leftPart.data!=rightPart.data)return false;
//        if (mirror(leftPart.left,rightPart.right)&&mirror(leftPart.right,rightPart.right)){
//            return true;
//        }
//        else return false;
//    }
    static boolean mirror(Node leftPart,Node rightPart){
        if (leftPart==null&&rightPart==null)return true;
        if (leftPart==null||rightPart==null)return false;
        if (leftPart.data!=rightPart.data)return false;
        return leftPart.data==rightPart.data&&ismirror(leftPart.left,rightPart.right)&&ismirror(leftPart.right,rightPart.left);
    }
    static boolean isSymmetric(Node root){
        if (root==null)return true;
        return mirror(root,root);
    }
    ________________________________________________________
    
    
    
    import java.util.Scanner;
class Node{
    int data;
    Node left;
    Node right;
    Node next;
    Node(int data){
        this.data=data;
        left=right=null;
    }
}

public class Main {
    static Scanner sc = new Scanner(System.in);
    static Node create(){
        int data= sc.nextInt();
        if (data==-1)return null;
        Node root = new Node(data);
        root.left=create();
        root.right=create();
        return root;
    }
    static boolean mirror(Node LST,Node RST){
        if (LST==null||RST==null){
            return LST==RST;
        }
        else if (LST.data==RST.data)return true;
        else if (mirror(LST.left,RST.right)&&mirror(LST.right,RST.left)) return true;
        return false;
    }

    static void inorder(Node root){
        if (root==null)return;
        inorder(root.left);
        System.out.print(root.data+" ");
        inorder(root.right);
    }
    
    static boolean isSymmetric(Node root){
        if (root==null)return true;
        return mirror(root,root);
    }



    public static void main(String[] args) {

        Node root =create();
        if (isSymmetric(root)){
            System.out.println("YES");
        }
        else System.out.println("NO");



    }

}

