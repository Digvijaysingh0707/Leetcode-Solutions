/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    static boolean same(TreeNode leftP,TreeNode rightP){
        if(leftP==null&&rightP==null)return true;
        if(leftP==null||rightP==null)return false;
        if(leftP.val!=rightP.val)return false;
        
        return same(leftP.left,rightP.right)&&same(leftP.right,rightP.left);
    }
    public boolean isSymmetric(TreeNode root) {
        if(root==null)return true;
        return same(root,root);
        }
}    ________________________________________________________
    
    
    
    import java.util.Scanner;
class Node{
    int data;
    Node left;
    Node right;
    Node next;
    Node(int data){
        this.data=data;
        left=right=null;
    }
}

public class Main {
    static Scanner sc = new Scanner(System.in);
    static Node create(){
        int data= sc.nextInt();
        if (data==-1)return null;
        Node root = new Node(data);
        root.left=create();
        root.right=create();
        return root;
    }
    static boolean mirror(Node LST,Node RST){
        if (LST==null||RST==null){
            return LST==RST;
        }
        else if (LST.data==RST.data)return true;
        else if (mirror(LST.left,RST.right)&&mirror(LST.right,RST.left)) return true;
        return false;
    }

    static void inorder(Node root){
        if (root==null)return;
        inorder(root.left);
        System.out.print(root.data+" ");
        inorder(root.right);
    }
    
    static boolean isSymmetric(Node root){
        if (root==null)return true;
        return mirror(root,root);
    }



    public static void main(String[] args) {

        Node root =create();
        if (isSymmetric(root)){
            System.out.println("YES");
        }
        else System.out.println("NO");



    }

}

