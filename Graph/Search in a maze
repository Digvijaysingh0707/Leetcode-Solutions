//Not working

static boolean isSafe(int i,int j,int m[][],int n,boolean visited[][]){
        if (i==-1||i==n||j==-1||j==n||visited[i][j]||m[i][j]==0){
            return false;
        }
        return true;
    }
    static void find(int i,int j,int m[][],int n,String ans,ArrayList<String> list,boolean visited[][]){
        if (i==-1||j==-1||i==n||j==n||visited[i][j]||m[i][j]==0){
            return;
        }
        if (i==n-1&&j==n-1){
            list.add(ans);
            return;
        }
        visited[i][j]=true;
        if (isSafe(i-1,j,m,n,visited)){
            list.add("U");
            find(i-1,j,m,n,ans,list,visited);
            list.remove()
        }
        if (isSafe(i+1,j,m,n,visited)){
            list.add("D");
            find(i+1,j,m,n,ans,list,visited);
        }
        if (isSafe(i,j-1,m,n,visited)){
            list.add("L");
            find(i,j-1,m,n,ans,list,visited);
        }
        if (isSafe(i,j+1,m,n,visited)){
            list.add("R");
            find(i,j+1,m,n,ans,list,visited);
        }

        visited[i][j]=false;
    }

    public static ArrayList<String>  printPath(int[][] m, int n) {
       ArrayList<String> possiblePaths= new ArrayList<>();
       String path="";
       boolean visited[][]= new boolean[n][n];
       find(0,0,m,n,path,possiblePaths,visited);
//       for (int i=0;i<possiblePaths.size();i++){
//           System.out.print(possiblePaths.get(i)+" ");
//       }
//        if (possiblePaths.size()==0){
//            possiblePaths.add();
//        }
        return possiblePaths;
    }
