import java.util.*;

public class GroupAnagrams {
    static String sort(String s){
        char a[]=s.toCharArray();
        Arrays.sort(a);
        return new String(a);

    }
    static List<List<String>> group(String[] words){
        HashMap<String,List<String>> m= new HashMap<>();
        for (String w:words){
            String s=sort(w);
            if (m.containsKey(s)){
                List<String> l=m.get(s);
                l.add(w);
            }
            else{
                List<String> l= new ArrayList<>();
                l.add(w);
                m.put(s,l);
            }
        }
        List<List<String>> ans = new ArrayList<>();
        for (String key:m.keySet()){
            ans.add(m.get(key));
        }
        return ans;
    }
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n=sc.nextInt();
        String words[]= new String[n];
        for (int i=0;i<n;i++){
            words[i]=sc.next();
        }
        List<List<String>> ans=group(words);
        for (List<String> list:ans){
            for (String w:list){
                System.out.print(w+" ");
            }
            System.out.println();
        }

    }
}



-------------------------------------
   static List<List<String>> find(String[] a){
       Map<String,List<String>> map = new HashMap<>();
       for (String s:a){
           char ch[] =s.toCharArray();
           Arrays.sort(ch);
           String sorted = new String(ch);
           if (!map.containsKey(sorted)){
               map.put(sorted,new LinkedList<String>());
           }
           map.get(sorted).add(s);//.add is property of linked list
       }
       return new LinkedList<>(map.values());
   }

