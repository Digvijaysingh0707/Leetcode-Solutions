import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.Vector;

public class Continuoussubarray {
    static boolean sum(int num[], int k) {
        if (num.length == 0) return false;
        Map<Integer, Integer> map = new HashMap<>();
        map.put(0, -1);
        int sum = 0;
        for (int i = 0; i < num.length; i++) {
            sum += num[i];
            if (k != 0) {
                sum %= k;
                if (map.containsKey(sum)) {
                    int preIndex = map.get(sum);
                    if (i - preIndex > 1) return true;
                } else map.put(sum, i);
            }
        }
        return true;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t-- >= 1) {
            int n = sc.nextInt();
            int a[] = new int[n];
            for (int i = 0; i < n; i++) {
                a[i] = sc.nextInt();
            }
            int k = sc.nextInt();
            System.out.println(sum(a, k));
        }
    }
}

