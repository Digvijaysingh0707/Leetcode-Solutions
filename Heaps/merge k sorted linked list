/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 
 * }
 */
class Solution {
    static ListNode mergeKLists(ListNode[] lists){
         PriorityQueue<ListNode> pq= new PriorityQueue<>(new Comparator<ListNode>() {
             public int compare(ListNode o1, ListNode o2) {
                 return o1.val - o2.val;
             }
         });
         for (ListNode node:lists){
             if (node!=null)pq.add(node);
         }
         ListNode node = new ListNode(-1);
         ListNode curr=node;
         while (!pq.isEmpty()){
             ListNode temp =pq.remove();
             curr.next=temp;
             curr=curr.next;
             if (temp.next!=null){
                 pq.add(temp.next);
             }

         }
         return node.next;
     }
}
