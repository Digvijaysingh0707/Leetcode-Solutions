O(1) space

class ListNode{
    int val;
    ListNode next;
    ListNode random;
    ListNode(int val,ListNode next){
        this.val=val;
        this.next=next;
        this.random=null;
    }
}
public class Random {
    static ListNode copyRandomList(ListNode head){
        //three pass approach
        if (head==null)return null;
        ListNode curr = head;
        //Making copy node
        while (curr!=null){
            ListNode copy = curr.next;
            copy.next=curr.next;
            curr.next=copy;
            curr=copy.next;
        }
        curr=head;
        //copying random pointers
        while (curr!=null){
            if (curr.random!=null){
                curr.next.random =curr.random.next;
            }
            curr=curr.next.next;
        }
        curr=head;
        ListNode copy = curr.next;
        ListNode copyHead=copy;
        //delinking copy nodes from the original
        while (copy!=null){
            curr.next=copy.next;
            if (curr.next!=null){
                copy.next=copy.next.next;
            }
            curr=curr.next;
            copy=copy.next;
        }
        return copyHead;

    }
