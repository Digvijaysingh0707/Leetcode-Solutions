You are given an array of positive and negative integers. If a number k at an index is positive, then move forward k steps. Conversely, if it's negative (-k), move backward k steps. Since the array is circular, you may assume that the last element's next element is the first element, and the first element's previous element is the last element.

Determine if there is a loop (or a cycle) in array. A cycle must start and end at the same index and the cycle's length > 1. Furthermore, movements in a cycle must all follow a single direction. In other words, a cycle must not consist of both forward and backward movements. Print 1 if cycle present else print 0.

Input Format
First Line Contains single integer n Second line contains n space separated integers

Constraints
1<=n<=1e6
-1000<=Ai<=1000

Output Format
single digit 1 or 0

Sample Input
5
2 -1 1 2 2
Sample Output
1



package Arrays;

import java.util.Scanner;

public class CircularArrayLoop {
    static int next(int a[], int i) {
        return (i + a[i] + a.length) % a.length;
    }

    static boolean CircularLoop(int a[]) {
        int n = a.length;
        for (int i = 0; i < n; i++) {
            int slow = i, fast = i;
            if (a[i] == 0) {
                continue;
            }
            while (a[slow] * a[next(a, slow)] > 0 &&
                    a[fast] * a[next(a, fast)] > 0 &&
                    a[fast] * a[next(a, next(a, fast))] > 0) {
                //move slow one step ahead
                slow = next(a, slow);
                //move fast two steps ahead
                fast = next(a, next(a, fast));
                if (slow == fast) {
                    //that means cycle is present but its length should be greater than 1
                    if (slow == next(a, slow)) break;
                    return true;
                }
            }
            slow = i;
            int value = a[slow];
            while (value * a[slow] > 0) {
                int x = slow;
                slow = next(a, slow);
                a[x] = slow;
            }
        }
        return false;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int a[] = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();
        }
        if (CircularLoop(a)) {
            System.out.println("1");
        } else {
            System.out.println("0");
        }
    }
}
